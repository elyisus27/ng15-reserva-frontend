// @import "../../ls.variables.scss";

$activeColor: #225792;
$inactiveColor: rgba(0, 0, 0, 0.54);
$danger: #225792;


@mixin input-color($color) {
    .ls-formfield-input {
        
        >input, select, textarea {
            caret-color: $color;
        }
    }
    &.ls-formfield-focused {
        .input-group-append {
            button {
                border-color: var(--primary);
            }
        }        
    }
}

.ls-formfield {
    // padding: 5px;
    // border-top: 1rem solid transparent;
    position: relative;
    // margin-bottom: 0.5rem;
    // display: inline-block;
    
    
    &.ls-formfield-anchor {
        width: 100% !important;
    }

    .ls-formfield-input {
        > input, select, textarea, editor {
            // font-family: $font-family;
            // font-size: 0.8125rem;
            // padding: 0.3125rem 0px;
            // width: 100%;
            // background: none;
            // border-width: 0px 0px 0px 0px;
            // border-color: $inactiveColor;
            // // caret-color: $activeColor; //-----
            // transition: all 100ms ease-in-out;
            // resize: none;
            // height: 1.5rem;

            // &.invisible {
            //     opacity: 0;
            // }

            &[type=password] {
                letter-spacing: 2px;
            }

            &[type="time"]::-webkit-clear-button {
                display: none;
            }

            &:focus {
                outline: none;
            }

            &::-webkit-outer-spin-button,
            &::-webkit-inner-spin-button {
                /* display: none; <- Crashes Chrome on hover */
                -webkit-appearance: none;
                margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
            }
        }

        textarea {
            height: 5rem;
        }

        editor {
            height: 5rem;
            
            .mce-content-body {
                outline: none;
                height: 100%;

                p { margin: 0; }
            }
        }

        input.form-control {
            border-right: 0px;
        }

        .input-group-append {
            button {
                border-right-width: 0px;
                border-left-width: 0px; 

                &:last-child {
                    border-right-width: 1px;
                }
            }
        }
    }

    &.ls-formfield-invalid {
        .ls-formfield-label {
            color: $danger;
        }

        .ls-formfield-underline {
            span {
                opacity: 1;
                background: $danger;
                transform: scaleX(1);
                transition: transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1);
            }
        }
    }

    &.ls-formfield-disabled {
        .ls-formfield-label {
            color: lighten($inactiveColor, 50%);
        }

        .ls-formfield-input {
            input, textarea, select {
                cursor: not-allowed;
            }
        }

        .ls-formfield-underline {
            background-image: linear-gradient(to right, $inactiveColor 0, $inactiveColor 33%, transparent 0);
            background-size: 4px 100%;
            background-repeat: repeat-x;
            background-color: transparent;
        }
    }

    &.ls-filterfieldcolumn {
        display: inline;
        .ls-filter-containter {
            position: fixed;
            z-index: 10;	
            max-height: 15rem;
        }
    } 

    &.ls-formfield-focused {
        .ls-formfield-input {
            input.form-control {
                border-color: var(--primary);
            }
    
            .input-group-append {
                button {
                    border-color: var(--primary);
                }
            } 
        }       
    }
}

:host {
    &.ng-dirty.ng-invalid {        
        .ls-formfield {
            .ls-formfield-label {
                color: $danger;
            }
    
            .ls-formfield-underline {
                background-color: $danger;
            }
    
            .ls-formfield-triggers {
                button {
                    color: $danger !important;
    
                    &.danger {
                        display: inline-block;
                    }
                }
            }
    
            @include input-color($danger);
        }
    }

    &[required] {
        .ls-formfield {
            .ls-formfield-label {
                ::after {
                    content: "*";
                }
            }
        }
    }

    &ls-filterfieldcolumn:focus {
        outline: none;
    }
} 

::ng-deep .ls-combolist-container, .ls-calendar-container, .ls-filter-containter {
    position: absolute;
    z-index: 10;	
    max-height: 15rem;
    width: 100%;
    left: 0px;

    ul.ls-list-container {
        max-height: 15rem;
        overflow: auto;
    }
}

::ng-deep editor {
    height: auto;
    min-height: 2rem;
    
    .mce-content-body {
        outline: none;
        height: 100%;
        overflow: auto;

        p { 
            margin: 0px;
            // font-family: $font-family;
            font-size: 13.333px;
        }
    }
}

::ng-deep ls-invalidmessages {    
    .container {
        display: none;
        position: absolute;
        background: $danger;
        top: calc(100% + 1px);
        width: auto;
        z-index: 50;
            border: 1px solid $danger;

        ul {
            padding: 0.2rem 0.2rem;
            margin: 0px;

            // font-size: 0.75rem;
            // font-style: italic;

            // list-style: disc;
            text-align: left;
            color: white;

            li {
                white-space: nowrap;

                &:before {
                    content: '\f111';
                    font-family: 'Font Awesome 5 Pro';
                    font-weight: 900;
                    // font-size: 0.4rem;

                    margin-right: 3px;
                    vertical-align: middle;
                    line-height: 0.75rem;
                }
            }
        }
    }
}

::ng-deep ls-button{  
    .danger {
        display: none;
        color: $danger !important;
    }
}

:host(.ng-dirty.ng-invalid) ::ng-deep {
    * {
        border-color: var(--danger) !important;
    }

    .ls-button {
        color: $danger !important;
        &.danger {
            display: inline-block;
        }
    }
}
